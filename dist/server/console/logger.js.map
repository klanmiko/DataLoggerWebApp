{"version":3,"sources":["console/logger.js"],"names":["stream","require","StringDecoder","sprintf","decoder","blessed","util","screen","smartCSR","title","canMessages","left","text","top","width","height","tags","scrollable","alwaysScroll","border","type","scrollbar","style","fg","bg","hover","right","listtable","append","key","ch","process","exit","focus","render","log","input","inspect","escape","pushLine","setScrollPerc","module","exports","LogStream","options","chunk","encoding","next","write","Writable","logStream","decodeStrings","set","msg","string","slice","length","value","i","setContent","error","generateTags"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAMC,gBAAgBD,QAAQ,gBAAR,EAA0BC,aAAhD;AACA,IAAIC,UAAUF,QAAQ,YAAR,EAAsBE,OAApC;AACA,IAAMC,UAAU,IAAIF,aAAJ,CAAkB,MAAlB,CAAhB;AACA,IAAIG,UAAUJ,QAAQ,SAAR,CAAd;AACA,IAAIK,OAAOL,QAAQ,MAAR,CAAX;AACA,IAAIM,SAASF,QAAQE,MAAR,CAAe;AACxBC,cAAU;AADc,CAAf,CAAb;AAGAD,OAAOE,KAAP,GAAe,YAAf;AACA,IAAIC,cAAc,mBAAlB;AACA;AACA,IAAIC,OAAON,QAAQO,IAAR,CAAa;AACpBC,SAAK,QADe;AAEpBF,UAAM,GAFc;AAGpBG,WAAO,KAHa;AAIpBC,YAAQ,MAJY;AAKpBC,UAAM,IALc;AAMpBC,gBAAY,IANQ;AAOpBC,kBAAc,IAPM;AAQpBC,YAAQ;AACJC,cAAM;AADF,KARY;AAWpBC,eAAW,IAXS;AAYpBC,WAAO;AACHC,YAAI,OADD;AAEHC,YAAI,OAFD;AAGHL,gBAAQ;AACJI,gBAAI;AADA,SAHL;AAMHE,eAAO;AACHD,gBAAI;AADD;AANJ;AAZa,CAAb,CAAX;AAuBA,IAAIE,QAAQrB,QAAQsB,SAAR,CAAkB;AAC1Bd,SAAK,QADqB;AAE1Ba,WAAO,GAFmB;AAG1BZ,WAAO,KAHmB;AAI1BC,YAAQ,MAJkB;AAK1BC,UAAM,IALoB;AAM1BC,gBAAY,KANc;AAO1BE,YAAQ;AACJC,cAAM;AADF,KAPkB;AAU1BE,WAAO;AACHC,YAAI,OADD;AAEHC,YAAI,OAFD;AAGHL,gBAAQ;AACJI,gBAAI;AADA,SAHL;AAMHE,eAAO;AACHD,gBAAI;AADD;AANJ;AAVmB,CAAlB,CAAZ;AAqBA;AACAjB,OAAOqB,MAAP,CAAcjB,IAAd;AACAJ,OAAOqB,MAAP,CAAcF,KAAd;AACA;;AAEA;;AAEA;AACAnB,OAAOsB,GAAP,CAAW,CAAC,QAAD,EAAW,GAAX,EAAgB,KAAhB,CAAX,EAAmC,UAASC,EAAT,EAAaD,GAAb,EAAkB;AACjD,WAAOE,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH,CAFD;;AAIA;AACArB,KAAKsB,KAAL;;AAEA;AACA1B,OAAO2B,MAAP;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChB,QAAG,EAAE,OAAOA,KAAP,KAAiB,QAAnB,CAAH,EAAiC;AAC7BA,gBAAQ9B,KAAK+B,OAAL,CAAaD,KAAb,CAAR;AACH;AACDA,YAAQ/B,QAAQiC,MAAR,CAAeF,KAAf,CAAR;AACAzB,SAAK4B,QAAL,CAAcH,KAAd;AACAzB,SAAK6B,aAAL,CAAmB,GAAnB;AACAjC,WAAO2B,MAAP;AACH;;AAEDO,OAAOC,OAAP,CAAeP,GAAf,GAAqBA,GAArB;;IAEMQ,S;;;AACF,uBAAYC,OAAZ,EAAqB;AAAA;AAAA,2IACVA,OADU;AAEpB;;;;+BACMC,K,EAAOC,Q,EAAUC,I,EAAM;AAC1BZ,gBAAI/B,QAAQ4C,KAAR,CAAcH,KAAd,CAAJ;AACAE;AACH;;;EAPmB/C,OAAOiD,Q;;AAS/BR,OAAOC,OAAP,CAAeQ,SAAf,GAA2B,IAAIP,SAAJ,CAAc,EAACQ,eAAe,IAAhB,EAAd,CAA3B;AACAV,OAAOC,OAAP,CAAeU,GAAf,GAAqB,UAASC,GAAT,EAAc;AAC/B,QAAIC,SAAS,EAAb;AACA5C,gBAAY0C,GAAZ,CAAgBC,IAAI,CAAJ,CAAhB,EAAwBA,IAAIE,KAAJ,CAAU,CAAV,EAAaF,IAAIG,MAAJ,GAAa,CAA1B,CAAxB;AAF+B;AAAA;AAAA;;AAAA;AAG/B,wDAAwB9C,WAAxB,4GAAqC;AAAA;AAAA,gBAA5BmB,GAA4B;AAAA,gBAAvB4B,KAAuB;;AACjCH,sBAAUnD,QAAQ,WAAR,EAAqB0B,GAArB,EAA0B4B,MAAM,CAAN,CAA1B,CAAV;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAID,MAAMD,MAAzB,EAAiCE,GAAjC,EAAsC;AAClCJ,0BAAUnD,QAAQ,OAAR,EAAiBsD,MAAMC,CAAN,CAAjB,CAAV;AACH;AACDJ,sBAAU,IAAV;AACH;AAT8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU/B5B,UAAMiC,UAAN,CAAiBL,MAAjB;AACA/C,WAAO2B,MAAP;AACH,CAZD;AAaAO,OAAOC,OAAP,CAAekB,KAAf,GAAuB,UAASxB,KAAT,EAAgB;AACnC,QAAG,EAAE,OAAOA,KAAP,KAAiB,QAAnB,CAAH,EAAiCA,QAAQ9B,KAAK+B,OAAL,CAAaD,KAAb,CAAR;AACjCA,YAAQ/B,QAAQwD,YAAR,CAAqB;AACzBtC,YAAI;AADqB,KAArB,EAGRlB,QAAQiC,MAAR,CAAeF,KAAf,CAHQ,CAAR;;AAKAzB,SAAK4B,QAAL,CAAcH,KAAd;AACAzB,SAAK6B,aAAL,CAAmB,GAAnB;AACAjC,WAAO2B,MAAP;AACH,CAVD","file":"logger.js","sourcesContent":["var stream = require('stream');\r\nconst StringDecoder = require('string_decoder').StringDecoder;\r\nvar sprintf = require(\"sprintf-js\").sprintf;\r\nconst decoder = new StringDecoder('utf8');\r\nvar blessed = require('blessed');\r\nvar util = require('util');\r\nvar screen = blessed.screen({\r\n    smartCSR: true\r\n});\r\nscreen.title = 'DataLogger';\r\nvar canMessages = new Map();\r\n// Create a box perfectly centered horizontally and vertically.\r\nvar left = blessed.text({\r\n    top: 'center',\r\n    left: '0',\r\n    width: '50%',\r\n    height: '100%',\r\n    tags: true,\r\n    scrollable: true,\r\n    alwaysScroll: true,\r\n    border: {\r\n        type: 'line'\r\n    },\r\n    scrollbar: true,\r\n    style: {\r\n        fg: 'white',\r\n        bg: 'black',\r\n        border: {\r\n            fg: '#f0f0f0'\r\n        },\r\n        hover: {\r\n            bg: 'green'\r\n        }\r\n    }\r\n});\r\nvar right = blessed.listtable({\r\n    top: 'center',\r\n    right: '0',\r\n    width: '50%',\r\n    height: '100%',\r\n    tags: true,\r\n    scrollable: false,\r\n    border: {\r\n        type: 'line'\r\n    },\r\n    style: {\r\n        fg: 'white',\r\n        bg: 'black',\r\n        border: {\r\n            fg: '#f0f0f0'\r\n        },\r\n        hover: {\r\n            bg: 'green'\r\n        }\r\n    }\r\n});\r\n// Append our box to the screen.\r\nscreen.append(left);\r\nscreen.append(right);\r\n// Add a png icon to the box\r\n\r\n// If our box is clicked, change the content.\r\n\r\n// Quit on Escape, q, or Control-C.\r\nscreen.key(['escape', 'q', 'C-c'], function(ch, key) {\r\n    return process.exit(0);\r\n});\r\n\r\n// Focus our element.\r\nleft.focus();\r\n\r\n// Render the screen.\r\nscreen.render();\r\nfunction log(input) {\r\n    if(!(typeof input === 'string')) {\r\n        input = util.inspect(input);\r\n    }\r\n    input = blessed.escape(input);\r\n    left.pushLine(input);\r\n    left.setScrollPerc(100);\r\n    screen.render();\r\n}\r\n\r\nmodule.exports.log = log;\r\n\r\nclass LogStream extends stream.Writable {\r\n    constructor(options) {\r\n        super (options);\r\n    }\r\n    _write(chunk, encoding, next) {\r\n        log(decoder.write(chunk));\r\n        next();\r\n    }\r\n}\r\nmodule.exports.logStream = new LogStream({decodeStrings: true});\r\nmodule.exports.set = function(msg) {\r\n    var string = '';\r\n    canMessages.set(msg[0], msg.slice(1, msg.length - 1));\r\n    for(let [key, value] of canMessages) {\r\n        string += sprintf('%5X: %08d', key, value[0]);\r\n        for(let i = 1; i < value.length; i++) {\r\n            string += sprintf(' %02X', value[i]);\r\n        }\r\n        string += '\\n';\r\n    }\r\n    right.setContent(string);\r\n    screen.render();\r\n};\r\nmodule.exports.error = function(input) {\r\n    if(!(typeof input === 'string')) input = util.inspect(input);\r\n    input = blessed.generateTags({\r\n        fg: 'red'\r\n    },\r\n    blessed.escape(input));\r\n\r\n    left.pushLine(input);\r\n    left.setScrollPerc(100);\r\n    screen.render();\r\n};\r\n"]}