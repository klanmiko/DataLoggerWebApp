{"version":3,"sources":["api/db/validator.js"],"names":["assert","require","module","exports","descriptor","ok","CAN_Id","map","forEach","value","length","offset","dataType","array","subLength","subDataType"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACAC,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAoB;AACjCJ,WAAOK,EAAP,CAAUD,WAAWE,MAArB;AACAN,WAAOK,EAAP,CAAUD,WAAWG,GAArB;AACAH,eAAWG,GAAX,CAAeC,OAAf,CAAuB,UAASC,KAAT,EAAe;AAClCT,eAAOK,EAAP,CAAUI,MAAMC,MAAN,IAAgBD,MAAMC,MAAN,IAAgB,CAA1C;AACAV,eAAOK,EAAP,CAAUI,MAAME,MAAN,IAAcF,MAAME,MAAN,IAAc,CAAtC;AACAX,eAAOK,EAAP,CAAUI,MAAMC,MAAN,IAAc,CAAd,IAAiBD,MAAMC,MAAN,IAAc,EAAzC;AACAV,eAAOK,EAAP,CAAUI,MAAME,MAAN,IAAc,CAAd,IAAiBF,MAAME,MAAN,IAAc,EAAzC;AACAX,eAAOK,EAAP,CAAWI,MAAMC,MAAN,GAAaD,MAAME,MAApB,IAA6B,EAAvC;AACAX,eAAOK,EAAP,CAAUI,MAAMG,QAAhB;AACAZ,eAAOK,EAAP,CAAUI,MAAMG,QAAN,IAAgB,SAAhB,IAA2BH,MAAMG,QAAN,IAAgB,OAA3C,IAAoDH,MAAMG,QAAN,IAAgB,MAApE,IAA4EH,MAAMG,QAAN,IAAgB,QAA5F,IAAsGH,MAAMG,QAAN,IAAgB,OAAhI;AACA,YAAGH,MAAMG,QAAN,IAAgB,MAAhB,IAAwBH,MAAMG,QAAN,IAAgB,OAA3C,EAAmD;AAC/CZ,mBAAOK,EAAP,CAAUI,MAAMC,MAAN,GAAa,CAAb,IAAgB,CAA1B;AACAV,mBAAOK,EAAP,CAAUI,MAAME,MAAN,GAAa,CAAb,IAAgB,CAA1B;AACH;AACD,YAAGF,MAAMG,QAAN,IAAgB,OAAnB,EAA2B;AACvBZ,mBAAOK,EAAP,CAAUI,MAAMI,KAAhB;AACAb,mBAAOK,EAAP,CAAUI,MAAMI,KAAN,CAAYC,SAAtB;AACAd,mBAAOK,EAAP,CAAUI,MAAMI,KAAN,CAAYE,WAAtB;AACAf,mBAAOK,EAAP,CAAUI,MAAMI,KAAN,CAAYE,WAAZ,IAAyB,SAAzB,IAAoCN,MAAMI,KAAN,CAAYE,WAAZ,IAAyB,OAA7D,IAAsEN,MAAMI,KAAN,CAAYE,WAAZ,IAAyB,MAA/F,IAAuGN,MAAMI,KAAN,CAAYE,WAAZ,IAAyB,QAA1I;AACAf,mBAAOK,EAAP,CAAUI,MAAMI,KAAN,CAAYC,SAAZ,GAAsB,CAAtB,IAAyB,CAAnC;AACH;AACJ,KAnBD;AAoBH,CAvBD","file":"validator.js","sourcesContent":["var assert = require('assert');\r\nmodule.exports = function(descriptor){\r\n    assert.ok(descriptor.CAN_Id);\r\n    assert.ok(descriptor.map);\r\n    descriptor.map.forEach(function(value){\r\n        assert.ok(value.length || value.length == 0);\r\n        assert.ok(value.offset||value.offset==0);\r\n        assert.ok(value.length>=0&&value.length<=64);\r\n        assert.ok(value.offset>=0&&value.offset<=64);\r\n        assert.ok((value.length+value.offset)<=64);\r\n        assert.ok(value.dataType);\r\n        assert.ok(value.dataType=='decimal'||value.dataType=='state'||value.dataType=='flag'||value.dataType=='string'||value.dataType=='array');\r\n        if(value.dataType=='flag'||value.dataType=='state'){\r\n            assert.ok(value.length%8==0);\r\n            assert.ok(value.offset%8==0);\r\n        }\r\n        if(value.dataType=='array'){\r\n            assert.ok(value.array);\r\n            assert.ok(value.array.subLength);\r\n            assert.ok(value.array.subDataType);\r\n            assert.ok(value.array.subDataType=='decimal'||value.array.subDataType=='state'||value.array.subDataType=='flag'||value.array.subDataType=='string');\r\n            assert.ok(value.array.subLength%8==0);\r\n        }\r\n    });\r\n}"]}