{"version":3,"sources":["profiler/dynamicParser_mock.js"],"names":["stream","require","fs","Q","path","parseStream","options","objectMode","config","readFileSync","join","__dirname","JSON","parse","self","specification","forEach","key","set","CAN_Id","chunk","encoding","next","transformed","fcall","bind","then","value","push","catch","err","process","env","NODE_ENV","console","error","done","data","map","out","i","length","getValue","slice","dataType","array","subDataType","offset","subLength","getDecimal","toString","preStartIndex","Math","floor","preShift","getArray","getFlag","getState","spec","index","generics","Array","object","Object","description","Timestamp","raw","get","beginParsing","chooseParser","Transform","module","exports"],"mappings":"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","file":"dynamicParser_mock.js","sourcesContent":["var stream = require('stream');\r\nvar fs = require('fs');\r\nvar Q = require('q');\r\nvar path = require('path')\r\nclass parseStream extends stream.Transform{ //ES6 Javascript is now just Java, apparently\r\n    constructor(options){\r\n        options = options || {};\r\n        options.objectMode = true;\r\n        super(options);\r\n        var config = fs.readFileSync(path.join(__dirname, '../api/db/defaults.conf'), 'utf-8');\r\n        config = JSON.parse(config);\r\n        var self = this;\r\n        this.specification = new Map();\r\n        Object.keys(config).forEach(function(key){\r\n            self.specification.set(config[key].CAN_Id, config[key]);\r\n        });\r\n    }\r\n    _transform(chunk, encoding, next) {\r\n        var transformed = Q.fcall(this.parse.bind(this), chunk);\r\n        transformed.then(function(value)\r\n        {\r\n            this.push(value);\r\n            next();\r\n        }.bind(this)).catch(function(err){\r\n            if(process.env.NODE_ENV==\"development\"){\r\n                if(err) console.error(err);\r\n                console.error(\"missing some parser\");\r\n            }\r\n        }.bind(this))\r\n        .done();\r\n    }\r\n    getArray(data,map){\r\n        var out = [];\r\n        for(var i=0;i<map.length;i++){\r\n            out.push(this.getValue(data.slice(),\r\n                {dataType:map.array.subDataType,\r\n                    offset:map.offset+i*map.array.subLength,\r\n                    length:map.array.subLength\r\n                }));\r\n        }\r\n        return out;\r\n    }\r\n    getString(data,map){\r\n        return this.getDecimal(data,map).toString();\r\n    }\r\n    getDecimal(data,map){\r\n        var out = 0;\r\n        var offset = map.offset;\r\n        var length = map.length;\r\n        var preStartIndex = Math.floor(map.offset/8)+2;\r\n        var preShift = map.offset%8;\r\n        for(var i=0;i<preShift;i++){\r\n            data[preStartIndex]&=0x7F;\r\n            data[preStartIndex] = data[preStartIndex]<<1;\r\n        }\r\n        data[preStartIndex] = data[preStartIndex]>>preShift;\r\n        offset -= preShift;\r\n        length += preShift; \r\n        while(length>0){\r\n            out = out<<1;\r\n            out |= ((data[Math.floor(offset/8)+2]&0x80)>>7);\r\n            data[Math.floor(offset/8)+2] = data[Math.floor(offset/8)+2]<<1;\r\n            offset++;\r\n            length--;\r\n        }\r\n        return out;        \r\n    }\r\n    getFlag(data,map){\r\n        var out = [];\r\n        var value = 0;\r\n        var length = map.length;\r\n        var offset = map.offset;\r\n        while(length>0){\r\n            value = value<<8;\r\n            value |= data[Math.floor(offset/8)+2];\r\n            offset+=8;\r\n            length-=8;\r\n        }\r\n        length = map.length;\r\n        out.push(value==0);\r\n        while(length>0){\r\n            out.push((value&0x01)==0x01);\r\n            value = value>>1;\r\n            length--;\r\n        }\r\n        return out;\r\n    }\r\n    getState(data,map){\r\n        var out=0;\r\n        var length = map.length;\r\n        var offset = map.offset;\r\n        //console.log(map);\r\n        while(length>0){\r\n            out = out<<8;\r\n            out |= data[Math.floor(offset/8)+2];\r\n            offset+=8;\r\n            length-=8;\r\n        }\r\n        return out;\r\n    }\r\n    getValue(data,map){\r\n        switch(map.dataType){\r\n            case \"array\":\r\n                return this.getArray(data,map);\r\n            case \"decimal\":\r\n                return this.getDecimal(data,map);\r\n            case \"flag\":\r\n                return this.getFlag(data,map);\r\n            case \"state\":\r\n                return this.getState(data,map);\r\n        }\r\n    }\r\n    beginParsing(out,data,spec){\r\n        var self = this;\r\n        spec.map.forEach(function(value,index,array){\r\n            if(value.key){\r\n                out[value.key] = self.getValue(data.slice(),value);\r\n            }\r\n            else{\r\n                if(!out.generics) out.generics = new Array();\r\n                var object = new Object();\r\n                object.description = value.description;\r\n                object.dataType = value.dataType;\r\n                if(value.dataType == 'array') object.subDataType = value.array.subDataType;\r\n                object.value = self.getValue(data.slice(),value);\r\n                out.generics.push(object);\r\n            }\r\n        });\r\n        return out;\r\n    }\r\n    chooseParser(data){\r\n        var self = this;\r\n        var out = new Object();\r\n        out.CAN_Id = data[0];\r\n        out.Timestamp = data[1];\r\n        out.raw = new Array();\r\n        for(var i=2;i<data.length;i++){\r\n            out.raw.push(data[i].toString(16));\r\n        }\r\n        var spec = this.specification || new Map();\r\n        var map = spec.get(data[0]) || {CAN_Id: data[0], map:[]};\r\n        return this.beginParsing(out, data, map);\r\n        //console.log(\"looking up database\");\r\n    }\r\n    parse(data){\r\n        if(data&&data.length>0) {\r\n            var array = data;\r\n            //console.log(array); \r\n            return Q.fcall(this.chooseParser.bind(this), array);\r\n        }\r\n        else return \"\";\r\n    }\r\n}\r\nmodule.exports = parseStream;"]}