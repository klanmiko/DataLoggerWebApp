{"version":3,"sources":["db/dbStream.js"],"names":["Writable","require","EventEmitter","dbStream","options","emitter","emit","chunk","encoding","callback","on","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,WAAWC,QAAQ,QAAR,EAAkBD,QAAnC;AACA,IAAIE,eAAeD,QAAQ,QAAR,CAAnB;;IACME,Q;;;AACF,sBAAYC,OAAZ,EAAqB;AAAA;;AACjBA,kBAAUA,WAAW,EAArB;;AADiB,8IAEXA,OAFW;;AAGjB,cAAKC,OAAL,GAAe,IAAIH,YAAJ,EAAf;AACA,cAAKG,OAAL,CAAaC,IAAb,CAAkB,OAAlB;AAJiB;AAKpB;;;;+BACMC,K,EAAOC,Q,EAAUC,Q,EACxB;AACIA;AACH;;;8BACKA,Q,EAAS;AACX,iBAAKJ,OAAL,CAAaK,EAAb,CAAgB,OAAhB,EAAwBD,QAAxB;AACH;;;+BACK,CACL;;;EAfkBT,Q;;AAiBvBW,OAAOC,OAAP,GAAiBT,QAAjB","file":"dbStream.js","sourcesContent":["const Writable = require('stream').Writable;\r\nvar EventEmitter = require('events');\r\nclass dbStream extends Writable {\r\n    constructor(options) {\r\n        options = options || {};\r\n        super(options);\r\n        this.emitter = new EventEmitter();\r\n        this.emitter.emit(\"ready\");\r\n    }\r\n    _write(chunk, encoding, callback)\r\n    {\r\n        callback();\r\n    }\r\n    ready(callback){\r\n        this.emitter.on(\"ready\",callback);\r\n    }\r\n    save(){\r\n    }\r\n}\r\nmodule.exports = dbStream;"]}